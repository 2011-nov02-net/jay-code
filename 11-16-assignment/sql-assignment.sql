create schema Work;
go

create table Work.Products (
	Id int not null primary key identity(1, 1),
	Name nvarchar(30) not null,
	Price smallmoney not null
);
go

create table Work.Customers (
	Id int not null primary key identity(1, 1),
	Firstname nvarchar(30) not null,
	LastName nvarchar(30) not null,
	CardNumber int not null
);
go

create table Work.Orders (
	Id int not null primary key identity(1, 1),
	ProductId int not null
		foreign key references Work.Products(Id) on delete cascade on update cascade,
	CustomerId int not null
		foreign key references Work.Customers(Id) on delete cascade on update cascade
);
go

-- add at least 3 records into each table
-- add product iPhone priced at $200
insert into Work.Products (Name, Price)
	values (
		'Meat',
		10.00
	);
insert into Work.Products (Name, Price)
	values (
		'Fruit',
		5.00
	);
insert into Work.Products (Name, Price)
	values (
		'Computer',
		1000.00
	);

insert into Work.Customers (Firstname, LastName, CardNumber)
	values (
		'John',
		'Lee',
		123123123
	);
insert into Work.Customers (Firstname, LastName, CardNumber)
	values (
		'Jane',
		'Doe',
		000000000
	);
insert into Work.Customers (Firstname, LastName, CardNumber)
	values (
		'Nick',
		'Escalona',
		112233445
	);
go

insert into Work.Orders (ProductId, CustomerId) 
	values (
		(select Id from Work.Products where Name = 'Fruit'),
		(select Id from Work.Customers where LastName = 'Doe')
	);
insert into Work.Orders (ProductId, CustomerId) 
	values (
		(select Id from Work.Products where Name = 'Computer'),
		(select Id from Work.Customers where LastName = 'Escalona')
	);
insert into Work.Orders (ProductId, CustomerId) 
	values (
		(select Id from Work.Products where Name = 'Meat'),
		(select Id from Work.Customers where FirstName = 'John')
	);
go
-- add product iPhone priced at $200
insert into Work.Products (Name, Price)
	values (
		'iPhone',
		200.00
	);
go
-- add customer Tina Smith
insert into Work.Customers (Firstname, LastName, CardNumber)
	values (
		'Tina',
		'Smith',
		999999999
	);
-- create order for Tina Smith bought on iPhone
insert into Work.Orders (ProductId, CustomerId) 
	values (
		(select Id from Work.Products where Name = 'iPhone'),
		(select Id from Work.Customers where FirstName = 'Tina')
	);
go
-- report all orders by Tina Smith
select * 
from Work.Orders
where CustomerId in (
	select CustomerId
	from Work.Customers
	where Firstname = 'Tina' and LastName = 'Smith'
	);
-- report all revenue generated by sales of iPhone
-- lists all orders of iPhones
select *
from Work.Orders
where ProductId in (
	select ProductId
	from Work.Products
	where Name = 'iPhone'
	);
-- Sum of all rows of orders of iPhones. Since there's no quantity column we assume each unique row of orders is quantity = 1
select SUM(Price) as Revenue
from Work.Orders
inner join Work.Products
on Work.Orders.ProductId = Work.Products.Id
where Work.Products.Name = 'iPhone'
go

-- increase the price of iPhone to $250
update Work.Products
set Price = 250.00
where Name = 'iPhone';